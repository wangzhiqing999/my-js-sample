<!DOCTYPE html>
<html>
  <head>
    <meta charset="UTF-8" />
    <title> 组件 </title>

	<!--
    <script src="https://unpkg.com/react@latest/dist/react.js"></script>
    <script src="https://unpkg.com/react-dom@latest/dist/react-dom.js"></script>
    <script src="https://unpkg.com/babel-standalone@6.15.0/babel.min.js"></script>
	-->

    <script src="js/react.js"></script>
    <script src="js/react-dom.js"></script>
    <script src="js/babel.min.js"></script>

  </head>


  <body>


    <div id="root"></div>

	<script type="text/babel">

		// 这里使用 React.createClass 方法用于生成一个组件类 HelloMessage
		// 包含了 内容 与 参数.
		// 注意，组件类的第一个字母必须大写，否则会报错，比如HelloMessage不能写成helloMessage。另外，组件类只能包含一个顶层标签，否则也会报错。
		var HelloMessage = React.createClass({
			// 所有组件类都必须有自己的 render 方法，用于输出组件。
			render: function() {
				// 注意，下面这行， 使用了 this.props。 state 和 props 主要的区别在于 props 是不可变的，而 state 可以根据与用户交互来改变。
				return <h1>你好！ {this.props.name}。</h1>;
			}
		});


		// 这里使用组件.
		// 定义了 组件的名称，与组件参数的数值.
		// 需要注意，组件参数，class 属性需要写成 className ，for 属性需要写成 htmlFor ，这是因为 class 和 for 是 JavaScript 的保留字。
		ReactDOM.render(
			<HelloMessage name="张三" />,
			document.getElementById('root')
		);
    </script>






	<hr/>


	<div id="test1"></div>
    <script type="text/babel">

		// this.props 对象的属性与组件的属性一一对应
		// 但是有一个例外，就是 this.props.children 属性。它表示组件的所有子节点
		var NotesList = React.createClass({
			render: function() {
				return (
					<ol>
					{
						/* this.props.children 属性。它表示组件的所有子节点 */
						React.Children.map(this.props.children, function (child) {
							return <li>{child}</li>;
						})
					}
					</ol>
				);
			}
		});


      ReactDOM.render(
		<NotesList>
			<span>张三</span>
			<span>李四</span>
			<span>王五</span>
			<span>赵六</span>
		</NotesList>,
        document.getElementById('test1')
      );
    </script>







	<hr/>
	<div id="test2"></div>


	<script type="text/babel">


		// 用于测试的 名称组件.
		var Name = React.createClass({
			render: function() {
				return (
					<h1>{this.props.name}</h1>
				);
			}
		});

		// 用于测试的 链接组件.
		var Link = React.createClass({
			render: function() {
				return (
					<a href={this.props.site}>
						{this.props.site}
					</a>
				);
			}
		});


		// 用于测试的 复合组件.
		// 这个组件的内容， 包含了其他的组件.
		var WebSite = React.createClass({
			render: function() {
				return (
					<div>
						<h3> 复合组件的测试！ </h3>
						<Name name={this.props.name} />
						<Link site={this.props.site} />
					</div>
				);
			}
		});


		// 这里使用组件.
		ReactDOM.render(
			<WebSite name="用于测试的网站" site=" http://www.用于测试的域名.cn" />,
			document.getElementById('test2')
		);

	</script>



  </body>
</html>
